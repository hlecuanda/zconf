
general {
    output_format = "i3bar"
    # align = "right"
    colors = true
    interval = 16
    color = '#FFFFFF'
    color_good = '#00FF00'
    color_bad = '#FF0000'
    color_degraded = '#FFFF00'
    on_click 1 = "refresh"
    on_click 2 = "exec echo $OUTPUT | xclip -i"
}

order += "group net"
order += "group hardware"
order += "frame ips"
order += "group xsl"
order += "clock"

group net {
    # align = right
    button_next = 1
    button_prev = 0
    # button_togle = '+'
    click_mode ='all'
    # click_mode ='button'
    # cycle = 10
    # format = "{output}"
    # format = "{button} {output}"
    fixed_width = True
    # format_button_closed = "+"
    # format_button_open = "-"
    # format_closed =""
    open = True

    netdata speed {
        cache_timeout =10 # refresh interval for this module (default 2)
        format = '[\?color=up {down}]↓[\?color=down {up}]↑Kbps'
        # format =        # display format for this module (default '{nic} [?color=down LAN(Kb): {down}↓ {up}↑] [?color=total T(Mb): {download}↓ {upload}↑ {total}↕]')
        # nic =           # network interface to use (default None)
        # thresholds =    # color thresholds to use (default {'down': [(0, 'bad'), (30, 'degraded'), (60, 'good')], 'total': [(0, 'good'), (400, 'degraded'), (700, 'bad')]})
        thresholds = {
            'up': [ 
                (0, 'good'),
                (30, 'degraded'),
                (60, 'bad'),
            ], 
            'down': [ 
                (0, 'bad'),
                (30, 'degraded'),
                (60, 'good'),
            ], 
        }
        # Format placeholders:
        #     {nic} network interface
        #     {down} number of download speed
        #     {up} number of upload speed
        #     {download} number of download usage
        #     {upload} number of upload usage
        #     {total} number of total usage
        # Color thresholds:
        #     {down} color threshold of download speed
        #     {total} color threshold of total usage
    }

    netdata totals {
        cache_timeout =10 # refresh interval for this module (default 2)
        format = '[\?color=down {download:~>5,d}]↓[\?color=up {upload:5,d}]↑[\?color=total {total:5,d}]↕Mbt'
        # format =        # display format for this module (default '{nic} [?color=down LAN(Kb): {down}↓ {up}↑] [?color=total T(Mb): {download}↓ {upload}↑ {total}↕]')
        # nic =           # network interface to use (default None)
        # thresholds =    # color thresholds to use (default {'down': [(0, 'bad'), (30, 'degraded'), (60, 'good')], 'total': [(0, 'good'), (400, 'degraded'), (700, 'bad')]})
        thresholds = {
            'up': [ 
                (60000, 'bad'),
                (40000,'degraded'),
                (0, 'good'),
            ], 
            'down': [ 
                (120000, 'bad'),
                (80000, 'degraded'),
                (0, 'good'),
            ], 
            'total': [
                (180000, 'bad'),
                (12000, 'degraded'),
                (0, 'good'),
            ]
        }
        # Format placeholders:
        #     {nic} network interface
        #     {down} number of download speed
        #     {up} number of upload speed
        #     {download} number of download usage
        #     {upload} number of upload usage
        #     {total} number of total usage
        # Color thresholds:
        #     {down} color threshold of download speed
        #     {total} color threshold of total usage
    }

    net_rate {
        # all_interfaces =       # ignore self.interfaces, but not self.interfaces_blacklist (default True)
        cache_timeout = 10       # how often we refresh this module in seconds (default 2)
        # devfile =              # location of dev file under /proc (default '/proc/net/dev')
        format = "[\?color=down {up}]↑[\?color=up {down}]↓[\?color=total {total}]↕{unit}"      # format of the module output (default '{interface}: {total}')
        # format_no_connection = # when there is no data transmitted from the start of the plugin (default '')
        format_value =  "{value:~>3.1f}"       # format to use for values (default "[?min_length=11 {value:.1f} {unit}]")
        # hide_if_zero =         # hide indicator if rate == 0 (default False)
        # interfaces =           # comma separated list of interfaces to track (default [])
        # interfaces_blacklist = # comma separated list of interfaces to ignore (default 'lo')
        # si_units =             # use SI units (default False)
        sum_values = True      # sum values of each interface instead of taking the top one (default False)
        # thresholds =           # thresholds to use for colors (default [(0, 'bad'), (1024, 'degraded'), (1024 * 1024, 'good')])
        # unit =                 # unit to use. If the unit contains a multiplier prefix, only this exact unit will ever be used (default "B/s")
        # Format placeholders:
        #     {down} download rate
        #     {interface} name of interface
        #     {total} total rate
        #     {up} upload rate
        # format_value placeholders:
        #     {unit} current unit
        #     {value} numeric value
        # Color thresholds:
        #     {down} Change color based on the value of down
        #     {total} Change color based on the value of total
        #     {up} Change color based on the value of up
    }

}

group hardware {
    # align = "right"
    button_next = 1
    button_prev = 0
    # button_togle = '+'
    click_mode ='all'
    # click_mode ='button'
    # cycle = 10
    # format = "{output}"
    # format = "{button} {output}"
    fixed_width = True
    # format_button_closed = "+"
    # format_button_open = "-"
    # format_closed =""
    open = True

      sysdata {
          cache_timeout = 30 # how often we refresh this module in seconds (default 10)
          format ='C:[\?color=cpu {cpu_usage:d}%]M:[\?color=mem {mem_used:d}/{mem_total:d}{mem_unit}({mem_used_percent:d}%)]'
                             # output format string (default '[?color=cpu CPU: {cpu_usage}%], ' '[?color=mem Mem: {mem_used}/{mem_total} GB ({mem_used_percent}%)]')
          # mem_unit = dynamic      # the unit of memory to use in report, case insensitive. ['dynamic', 'KiB', 'MiB', 'GiB'] (default 'GiB')
          # swap_unit =      # the unit of swap to use in report, case insensitive. ['dynamic', 'KiB', 'MiB', 'GiB'] (default 'GiB')
          # temp_unit =      # unit used for measuring the temperature ('C', 'F' or 'K') (default '°C')
          # thresholds =     # thresholds to use for color changes (default [(0, "good"), (40, "degraded"), (75, "bad")])
          # zone =           # thermal zone to use. If None try to guess CPU temperature (default None)
                             # Format placeholders:
                             #    {cpu_temp} cpu temperature
                             #    {cpu_usage} cpu usage percentage
                             #    {mem_total} total memory
                             #    {mem_unit} unit for memory
                             #    {mem_used} used memory
                             #    {mem_used_percent} used memory percentage
                             #    {swap_total} total swap
                             #    {swap_unit} unit for swap
                             #    {swap_used} used swap
                             #    {swap_used_percent} used swap percentage
                             #    {temp_unit} temperature unit
                             # Color thresholds:
                             #    cpu change color based on the value of cpu_usage
                             #    max_cpu_mem change the color based on the max value of cpu_usage and mem_used_percent
                             #    mem change color based on the value of mem_used_percent
                             #    swap change color based on the value of swap_used_percent
                             #    temp change color based on the value of cpu_temp
                             # NOTE: If using the {cpu_temp} option, the sensors command should be available, provided by the lm-sensors or lm_sensors package.
      }
    diskdata all {
        cache_timeout = 1200 # refresh interval for this module. (default 10)
        # disk = sda1     # show stats for disk or partition, i.e. sda1. None for all disks. (default None)
        format = "{disk}:{used}/{free}G {used_percent}%"# display format for this module. (default "{disk}: {used_percent}% ({total})")
        format_space =  "[{value:d}]"# display format for disk space values (default "[?min_length=5 {value:.1f}]")
        # format_rate =   # display format for rates value (default "[?min_length=11 {value:.1f} {unit}]")
        # sector_size =   # size of the disk's sectors. (default 512)
        # si_units =      # use SI units (default False)
        # thresholds =    # thresholds to use for color changes (default {'free': [(0, 'bad'), (10, 'degraded'), (100, 'good')], 'total': [(0, "good"), (1024, 'degraded'), (1024 * 1024, 'bad')]})
        # unit =          # unit to use. If the unit contains a multiplier prefix, only this exact unit will ever be used (default "B/s")
        # Format placeholders:
        #     {disk} the selected disk
        #     {free} free space on disk in GB
        #     {used} used space on disk in GB
        #     {used_percent} used space on disk in %
        #     {read} reading rate
        #     {total} total IO rate
        #     {write} writing rate
        # format_rate placeholders:
        #     {unit} name of the unit
        #     {value} numeric value of the rate
        # format_space placeholders:
        #     {value} numeric value of the free/used space on the device
        # Color thresholds:
        #     {free} Change color based on the value of free
        #     {used} Change color based on the value of used_percent
        #     {read} Change color based on the value of read
        #     {total} Change color based on the value of total
        #     {write} Change color based on the value of write
        #     }
        #     diskdata usr {}
        #     diskdata all {}
    }
    diskdata root {
        cache_timeout = 1200 # refresh interval for this module. (default 10)
        disk = sda1     # show stats for disk or partition, i.e. sda1. None for all disks. (default None)
        format = "{disk}:{used}/{free}G {used_percent}%"# display format for this module. (default "{disk}: {used_percent}% ({total})")
        format_space =  "[{value:d}]"# display format for disk space values (default "[?min_length=5 {value:.1f}]")
        # format =        # display format for this module. (default "{disk}: {used_percent}% ({total})")
        # format_rate =   # display format for rates value (default "[?min_length=11 {value:.1f} {unit}]")
        # format_space =  # display format for disk space values (default "[?min_length=5 {value:.1f}]")
        # sector_size =   # size of the disk's sectors. (default 512)
        # si_units =      # use SI units (default False)
        # thresholds =    # thresholds to use for color changes (default {'free': [(0, 'bad'), (10, 'degraded'), (100, 'good')], 'total': [(0, "good"), (1024, 'degraded'), (1024 * 1024, 'bad')]})
        # unit =          # unit to use. If the unit contains a multiplier prefix, only this exact unit will ever be used (default "B/s")
        # Format placeholders:
        #     {disk} the selected disk
        #     {free} free space on disk in GB
        #     {used} used space on disk in GB
        #     {used_percent} used space on disk in %
        #     {read} reading rate
        #     {total} total IO rate
        #     {write} writing rate
        # format_rate placeholders:
        #     {unit} name of the unit
        #     {value} numeric value of the rate
        # format_space placeholders:
        #     {value} numeric value of the free/used space on the device
        # Color thresholds:
        #     {free} Change color based on the value of free
        #     {used} Change color based on the value of used_percent
        #     {read} Change color based on the value of read
        #     {total} Change color based on the value of total
        #     {write} Change color based on the value of write
        #     }
        #     diskdata usr {}
        #     diskdata all {}
    }
    diskdata home {
        cache_timeout = 1200 # refresh interval for this module. (default 10)
        disk = sdb1     # show stats for disk or partition, i.e. sda1. None for all disks. (default None)
        format = "{disk}:{used}/{free}G {used_percent}%"# display format for this module. (default "{disk}: {used_percent}% ({total})")
        format_space =  "[{value:d}]"# display format for disk space values (default "[?min_length=5 {value:.1f}]")
        # format =        # display format for this module. (default "{disk}: {used_percent}% ({total})")
        # format_rate =   # display format for rates value (default "[?min_length=11 {value:.1f} {unit}]")
        # format_space =  # display format for disk space values (default "[?min_length=5 {value:.1f}]")
        # sector_size =   # size of the disk's sectors. (default 512)
        # si_units =      # use SI units (default False)
        # thresholds =    # thresholds to use for color changes (default {'free': [(0, 'bad'), (10, 'degraded'), (100, 'good')], 'total': [(0, "good"), (1024, 'degraded'), (1024 * 1024, 'bad')]})
        # unit =          # unit to use. If the unit contains a multiplier prefix, only this exact unit will ever be used (default "B/s")
        # Format placeholders:
        #     {disk} the selected disk
        #     {free} free space on disk in GB
        #     {used} used space on disk in GB
        #     {used_percent} used space on disk in %
        #     {read} reading rate
        #     {total} total IO rate
        #     {write} writing rate
        # format_rate placeholders:
        #     {unit} name of the unit
        #     {value} numeric value of the rate
        # format_space placeholders:
        #     {value} numeric value of the free/used space on the device
        # Color thresholds:
        #     {free} Change color based on the value of free
        #     {used} Change color based on the value of used_percent
        #     {read} Change color based on the value of read
        #     {total} Change color based on the value of total
        #     {write} Change color based on the value of write
        #     }
        #     diskdata usr {}
        #     diskdata all {}
    }
}

 frame ips {
   # button_toggle = None        # Button used to toggle if one in format. Setting to None disables (default 1)
   format = "{output}{button}" # Display format to use (default '{output}')
   format_button_closed = "IP" # Format for the button when frame open (default '+')
   format_button_open = " IP"  # Format for the button when frame closed (default '-')
   format_separator = " "      # Specify separator between contents. If this is None then the default i3bar separator will be used (default None)
   open = False                # If button then the frame can be set to be open or close (default True)
   # Format of status string parameters:
   #     {button} If used a button will be used that can be clicked to hide/show the contents of the frame.
   #     {output} The output of the modules in the frame
      group ipaddr {
         # align = "right"
         button_next = 1
         button_prev = 0
         # button_togle = 1
         click_mode ='all'
         # click_mode ='button'
         # cycle = 10
         format = "{output}"
         # format = "{output} {button}"
         fixed_width = False
         # format_button_closed = "IP"
         # format_button_open = "IP"
         # format_closed =""
         open = False
         whatismyip {
            cache_timeout = 86400    # how often we refresh this module in seconds (default 30)
            # expected =               # define expected values for format placeholders, and use color_degraded to show the output of this module if any of them does not match the actual value. This should be a dict eg {'country': 'France'} (default None)
            format = "{country_code}:{ip}"                # available placeholders are {ip} and {country}, as well as any other key in JSON fetched from url_geo (default '{ip}')
            # hide_when_offline =      # hide the module output when offline (default False)
            # icon_off =               # what to display when offline (default '■')
            # icon_on =                # what to display when online (default '●')
         }
         net_iplist {
            cache_timeout = 86400  # refresh interval for this module in seconds. (default 30)
            format = "I:[\?color=color_good {format_iface}]"         # format of the output. (default 'Network: {format_iface}')
            format_iface = "{ip4}"   # format string for the list of IPs of each interface. (default '{iface}:[ {ip4}][ {ip6}]')
            # format_no_ip =    # string to show if there are no IPs to display. (default 'no connection')
            # iface_blacklist = # list of interfaces to ignore. Accepts shell-style wildcards. (default ['lo'])
            # iface_sep =       # string to write between interfaces. (default ' ')
            # ip_blacklist =    # list of IPs to ignore. Accepts shell-style wildcards. (default [])
            # ip_sep =          # string to write between IP addresses. (default ',')
            # remove_empty =    # do not show interfaces with no IP. (default True)
            # Format placeholders:
            #     {format_iface} the format_iface string.
            # Format placeholders for format_iface:
            #     {iface} name of the interface.
            #     {ip4} list of IPv4 of the interface.
            #     {ip6} list of IPv6 of the interface.
            # Color options:
            #     color_bad no IPs to show
            #     color_good IPs to show
         }
      }
 }

group xsl {
   # button_toggle = 1      # Button used to toggle if one in format. Setting to None disables (default 1)
   format = "[\?color=color_bad >]>[\?color=color_good {output}]<[\?color=color_bad <]{button}" # Display format to use (default '{output}')
   format_button_closed = "XSEL" # Format for the button when frame open (default '+')
   format_button_open = " XSEL"  # Format for the button when frame closed (default '-')
   format_separator = " "        # Specify separator between contents. If this is None then the default i3bar separator will be used (default None)
   open = False                  # If button then the frame can be set to be open or close (default True)
                                 # Format of status string parameters:
                                 # {button} If used a button will be used that can be clicked to hide/show the contents of the frame.
                                 # {output} The output of the modules in the frame
    xsel {
        cache_timeout = 4    # refresh interval for this module (default 0.5)
        # command =          # the clipboard command to run (default 'xsel -o')
        # format =           # display format for this module (default '{selection}')
        max_size = 30        # strip the selection to this value (default 15)
        # symmetric =        # show beginning and end of the selection string with respect to configured max_size. (default True)
    }
}

clock {
   # block_hours =                 # length of time period for all blocks in hours (default 12)
   # blocks =                      # a string, where each character represents time period from the start of a time period. (default ‘🕛🕧🕐🕜🕑🕝🕒🕞🕓🕟🕔🕠🕕🕡🕖🕢🕗🕣🕘🕤🕙🕥🕚🕦’)
     button_change_format = None   # button that switches format used setting to None disables (default 1)
     button_change_time_format = 1 # button that switches format_time used. Setting to None disables (default 2)
     button_reset = None           # button that switches display to the first timezone. Setting to None disables (default 3)
   # cycle =                       # If more than one display then how many seconds between changing the display (default 0)
   # format =                      # defines the timezones displayed. This can be a single string or a list. If a list is supplied then the formats can be cycled through using cycle or by button click. (default ‘{Local}’)
     format_time = ['%F %r','%s']  # format to use for the time, strftime directives such as %H can be used this can be either a string or to allow multiple formats as a list. The one used can be changed by button click. (default [‘[{name_unclear} ]%c’, ‘[{name_unclear} ]%x %X’, ‘[{name_unclear} ]%a %H:%M’, ‘[{name_unclear} ]{icon}’])
   # round_to_nearest_block =      # defines how a block icon is chosen. Examples: when set to True, ‘13:14’ is ‘🕐’, ‘13:16’ is ‘🕜’ and ‘13:31’ is ‘🕜’; when set to False, ‘13:14’ is ‘🕐’, ‘13:16’ is ‘🕐’ and ‘13:31’ is ‘🕜’. (default True)
   # Format placeholders:
   #    {icon} a character representing the time from blocks
   #    {name} friendly timezone name eg Buenos Aires
   #    {name_unclear} friendly timezone name eg Buenos Aires but is empty if only one timezone is provided
   #    {timezone} full timezone name eg America/Argentina/Buenos_Aires
   #    {timezone_unclear} full timezone name eg America/Argentina/Buenos_Aires but is empty if only one timezone is provided
}



    # frame {
    #     button_toggle = None     # Button used to toggle if one in format. Setting to None disables (default 1)
    #     # format =               # Display format to use (default '{output}')
    #     # format_button_closed = # Format for the button when frame open (default '+')
    #     # format_button_open =   # Format for the button when frame closed (default '-')
    #     format_separator = " "   # Specify separator between contents. If this is None then the default i3bar separator will be used (default None)
    #     # open =                 # If button then the frame can be set to be open or close (default True)
    #     # Format of status string parameters:
    #     #     {button} If used a button will be used that can be clicked to hide/show the contents of the frame.
    #     #     {output} The output of the modules in the frame

    # }
#  vim: set ft=i3 sw=4 tw=0 fdm=syntax et :
