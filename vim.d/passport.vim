"  ____  ____ ____    ____                       _
" |  _ \| __ ) ___|  |  _ \ ___ _ __   ___  _ __| |_ ___
" | |_) |  _ \___ \  | |_) / _ \ '_ \ / _ \| '__| __/ __|
" |  __/| |_) |__) | |  _ <  __/ |_) | (_) | |  | |_\__ \
" |_|   |____/____/  |_| \_\___| .__/ \___/|_|   \__|___/
"                              |_|
"  _   _                 _ _ _
" | | | | __ _ _ __   __| | (_)_ __   __ _
" | |_| |/ _` | '_ \ / _` | | | '_ \ / _` |
" |  _  | (_| | | | | (_| | | | | | | (_| |
" |_| |_|\__,_|_| |_|\__,_|_|_|_| |_|\__, |
"                                    |___/
" h@h-lo.me 20180215 220934 -0800 PST 1518761374 d(-_- )b... 
" {{
" This s a collection of vim scripts and custom commands I wrote over the 
" years in order to handle reports generated by Passport Busniness Solution's
" accounting software. 
"
" While some of the reports can be directly output from PBS in CSV form, most
" of them are not, and it is quite boring to move clean-up and convert them
" into excel. Luckyly, as is the case with most COBOL written software, the
" report format is quite similar throughout the whole suite, and being fully
" text-based without JSON or XML shennigans as is all the rage this days, 
" they can be easely converted to CSV or TSB, even Fixed-Width formats that
" are more machine-oriented. 
"
" TL;DR: use this scripts to transform the human-friendly printouts from PBS
" into machine-friendly CSV)
"
" }}

" Function/Custom command template"{{
" Descriptive Title Capitalize All Words End In Colon: "{{
" describe the purpose of your Function 
" function! FunctionName(str)
"     " function body
" endfunction
" command! -nargs=+ -complete=command FunctionName silent call FunctionName(<q-args>)
" }}
"}}

" Pad Lines To Width: "{{
" add spaces on the right to pad lines shorter than arg in length
function! PadRight(width)
  :%s/\v^.*$/\= submatch(0) . " " . repeat(" ", a:width - len(submatch(0)))
endfunction
command! -nargs=+ -complete=command PadRight silent call PadRight(<q-args>)
" }}

" Zero Pad Dates: "{{
" pad dates so all become 8 chars in width
function! PadDates()
  :%s/\v\s(\d{1}\/\d{2}\/\d{2})/0\1/g  " m/dd/yy to 0m/dd/yy
  " :%s/\v(\d{2}\/)(\d\/\d{2})/\10\2/g  "mm/d/yy  to mm/0d/yy
endfunction
command! PadDates silent call PadDates()
" }}

" US Date To ISO Date: "{{
" makes dumb mm/dd/yy to YYYY-mm-dd
function! ISOates()
  :%s/\v(\d{2})\/(\d{2})\/(\d{2})/20\3-\2-\1/g
endfunction
command! ISOates silent call ISOates()
" }}

" Clean Common Lines: "{{
" removes lines commont to most passport reports
function! CleanCommon()
    g/--/d
    " g/^$/d
    g/^..Date/d
    g/^.Date.*\n/d
    g/^..$/d
    g/\v(\w\s){4,}/d
    :normal G
    :normal dd
    :normal gg
    silent call PadRight(134)
endfunction
command! -nargs=0 CleanCommon silent call CleanCommon()
"}}

" AR Vendors Report: "{{
" header template "{{
" Vend-#   Name                         Contact-1          Phone-1           1099-ID-#           A/P-Acct-#           ---- Terms -----
" Status   Address                      Contact-2          Phone-2           1099-ID-type        Disc-acct-#          Type    Due-days
" Type                                  Vend-ref-#         Last-purch-date   1099-amt-YTD        Dflt-dist-acct-#     Cutoff Disc-days
" Pmt-grp                               1099 Type          Current-Balance   1099-amt-nxt-yr                                    Disc-%
"                                             Warning
"                                             *** WARNING - THIS VENDOR DOES NOT GET A 1099 BUT HAS AMOUNTS REPORTABLE ***
"}}

function! CleanARVendors() 
  silent call CleanCommon()
  g/^Vend-#/d
  g/^Status/d
  g/^Type/d
  g/^Pmt-grp/d
  g/^Starting vendor/d
  g/^  Ending vendor/d
  g/^Vendor status: /d
  g/^  Terms types: /d
  g/^EOM = end of cu/d
  g/Vendors on file/d
  %s/^$/BlAnKs/
  %s/BlAnKs\n{3}/d
  %s/\v^\s+$//
  let l:reportlenght=line("$")
  let l:vendorGroups=(l:reportlenght/6)
  let linenr = 0 
  while linenr < line("$") 
    let linenr += 1
    let line = getline(linenr) 
    if strlen(line)!=0
      j
    endif
  endwhile 
  silent call PadDates()
  silent call ISOates()
endfunction
command! CleanARVendors silent call CleanARVendors()
" }}


" Vend-#   Name                         Contact-1          Phone-1           1099-ID-#           A/P-Acct-#           ---- Terms -----
" Status   Address                      Contact-2          Phone-2           1099-ID-type        Disc-acct-#          Type    Due-days
" Type                                  Vend-ref-#         Last-purch-date   1099-amt-YTD        Dflt-dist-acct-#     Cutoff Disc-days
" Pmt-grp                               1099 Type          Current-Balance   1099-amt-nxt-yr                                    Disc-%
"                                             Warning
"                                             *** WARNING - THIS VENDOR DOES NOT GET A 1099 BUT HAS AMOUNTS REPORTABLE ***
function! CleanValuation(str) " {{
    " g/^..$/d
    " g/^\s\+Distri/d
    g/(cost X qty-oh)$/d
    g/--/d
    g/^$/d
    g/^..Date/d
    g/^.Date/d
    g/^Cut-off-date:/d
    g/^Inventory/d
    g/^Item/d+
    g/items\s\+Total:/d+
    g/^Vendor/d
    g/^Warehouse/d
    g/^\s\+I N V E N T O R Y/d
    g/$/d
    %s/^/\=a:str . "    "/
endfunction
command! -nargs=+ -complete=command CleanValuation silent call CleanValuation(<q-args>)
" }}

function! CleanPerfGL() "{{
    g/G E N E R A L  L E D G E R/d
    g/Loc:\s\d\+$/d
    g/^\s\{5,}Beginning/d
    g/^\s\{5,}Fiscal/d
    g/^\s\{5,}DETAIL/d
    g/^\s\{5,}ALL Locations/d
    g/^=\+$/d
    g/^\s\+-\+$/d
    g/^-\+$/d
    g/^*$/d
    g/^\s\+Total :/d
    g/Ending Balance :/d
    g/(All Locations)/d
    g/(All Accounts)/d
    g/^\s\+Account/d
    g/^Journal Description/d
    g/\w\+ Totals :/d
    g/^$/d
    g/End of Report/d
endfunction
command! -nargs=0 -complete=command CleanPerfGL call CleanPerfGL()
"}}

function! CleanGLLayout() "{{
    %s/ Check //
    g/--/d
    g/^$/d
    g/^..Date/d
    g/^.Date/d
    g/^Date/d
    g/^\s\+C H/d
    " g/^\s\+Distri/d
    " g/^\s\+Totals:/d
endfunction
command! -nargs=0 -complete=command CleanGLLayout silent call CleanGLLayout()
" }}

function! CleanAPEditList() "{{
    %s/ Check //
    g/--/d
    g/^$/d
    g/^..$/d
    g/^..Date/d
    g/^.Date/d
    g/^Checking-acct/d
    g/^Date/d
    g/^Descri/d
    g/^Grand totals:/d
    g/^\s\+C H/d
    " g/^\s\+Distri/d
    " g/^\s\+Totals:/d
endfunction
command! -nargs=0 -complete=command CleanAPEditList silent call CleanCR()
" }}

function! CleanCR() "{{
    %s/ Check //
    %s/^\s\+\(\d\/\)/ \1/
    %s/^\s\+\(\d\d\/\)/\1/
    g/--/d
    g/^$/d
    g/^..$/d
    g/^..Date/d
    g/^.Date/d
    g/^Cash/d
    g/^Che/d
    g/^Date/d
    g/^Descri/d
    g/^Grand totals:/d
    g/^\s\+Acct-#   Description/d
    g/^\s\+C H/d
    g/^\s\+Distri/d
    g/^\s\+Totals:/d
endfunction
command! -nargs=0 -complete=command CleanCR call CleanCR()
" }}

" Function: InsExCmd {{: Capture ex command output
" Desc: Capture ex command output
" Arguments:
    function! InsExCmd(cmd)
      redir => message
      silent execute a:cmd
      redir END
      silent put=message
      set nomodified
    endfunction
    command! -nargs=+ -complete=command InsExCmd call InsExCmd(<q-args>)
" }}

"Function: CleanTrace {{
"Desc: moves the comment on the current line to
" the line specified by count
"Arguments: N/A
"
function! CleanTrace()
    :g/Searching/d
    :g/previous dir/d
    :g/finished/d
endfunction
command! -nargs=* -complete=command CleanTrace call CleanTrace()
" }}

" vim: set foldmarker={{,}} foldmethod=marker sw=2 foldenable:
